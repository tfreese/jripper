// Execute Tasks in SubModule: gradle MODUL:clean build
plugins {
    id "de.freese.gradle.conventions" version "$version_myConventionPlugin" apply false
    id "io.spring.dependency-management" version "$version_springDependencyManagement" apply false
    id "org.springframework.boot" version "$version_springBoot" apply false
}

subprojects {
    apply plugin: "base"
    apply plugin: "de.freese.gradle.conventions"
    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:$version_springBoot")
        }

        dependencies {
            //dependency("GROUP:ARTIFACT:$version_XXX")
        }
    }

//    afterEvaluate { project ->
//        if (project.plugins.hasPlugin("java") || project.plugins.hasPlugin("java-library") || project.plugins.hasPlugin("application")) {
//            dependencies {
//                testImplementation("org.junit.jupiter:junit-jupiter")
//                testRuntimeOnly("org.junit.platform:junit-platform-launcher")
//            }
//        }
//    }
}

project("jripper-core") {
    apply plugin: "java-library"
    description = "Java Ripper Core Modul"
    dependencies {
        api("org.apache.commons:commons-lang3")
        api("org.slf4j:slf4j-api")

        runtimeOnly("ch.qos.logback:logback-classic")
        runtimeOnly("org.codehaus.janino:janino")

        testImplementation("org.junit.jupiter:junit-jupiter")
        testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    }

    //test.enabled = false
    //test {
    //exclude "de/freese/jripper/core/**"
    //exclude "de/freese/jripper/core/TestDiskID.class"
    //exclude "de/freese/jripper/core/TestRipper.class"
    //}
}

project("jripper-console") {
    apply plugin: "java"
    description = "Java Ripper Console Modul"
    dependencies {
        implementation(project(":jripper-core"))
    }
}

project("jripper-swing") {
    apply plugin: "java"
    apply plugin: "org.springframework.boot"
    description = "Java Ripper Swing Modul"
    dependencies {
        implementation(project(":jripper-core"))

        implementation("de.freese:binding:$project.version")
    }

    // Start: gradle bootRun --args="--spring.profiles.active=dev"
    // The archive name. If the name has not been explicitly set, the pattern for the name is:
    // [archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]
    // archiveFileName = "my-boot.jar"
    springBoot {
        mainClass = "de.freese.jripper.swing.JRipperSwing"
    }
}
