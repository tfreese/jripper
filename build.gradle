// Tasks im SubModul ausführen: gradle MODUL:clean build

subprojects {
    apply plugin: 'java'
    apply plugin: "maven-publish"
    apply plugin: "de.freese.gradle.conventions"
    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:$version_springBoot"
        }

        dependencies {
            dependency "commons-io:commons-io:$version_commonsIo"
        }
    }
}

project("jripper-core") {
    apply plugin: "java-library"
    description = "Java Ripper Core Modul"
    dependencies {
        api("commons-io:commons-io")
        api("org.apache.commons:commons-lang3")
        api("org.slf4j:slf4j-api")

        runtimeOnly("ch.qos.logback:logback-classic")
        runtimeOnly("org.codehaus.janino:janino")

        testImplementation("org.junit.jupiter:junit-jupiter-engine")
        testImplementation("org.junit.platform:junit-platform-runner")
        testImplementation("org.junit.platform:junit-platform-suite-api")
    }

    //test.enabled = false
    //test {
    //exclude 'de/freese/jripper/core/**'
    //exclude 'de/freese/jripper/core/TestDiskID.class'
    //exclude 'de/freese/jripper/core/TestRipper.class'
    //}
}

project("jripper-console") {
    description = "Java Ripper Console Modul"
    dependencies {
        implementation(project(":jripper-core"))
    }
}

project("jripper-swing") {
    apply plugin: "org.springframework.boot"
    description = "Java Ripper Swing Modul"
    dependencies {
        implementation(project(":jripper-core"))

        implementation("de.freese:binding:$project.version")
    }

	// Sonst würde nur das BootJar erstellt werden.
	jar {
		enabled = true
	}
	
	// Start: gradle bootRun --args='--spring.profiles.active=dev'
	bootJar {
	    mainClass = "de.freese.jripper.swing.JRipperSwing"
	    classifier = 'boot'
	}
}
